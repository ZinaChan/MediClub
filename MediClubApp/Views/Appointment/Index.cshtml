@model AppointmentViewModel;
@{
    Layout = "~/Views/Shared/_LayoutAuth.cshtml";
    ViewData["Title"] = "Appointment Page";
}

<h1>Appointments List</h1>
<hr />
<div class="col mb-3">
    <div class="row-cols-auto mb-3">
        <a asp-route="CreateAppointmentPage" class="btn-modern">Create new Appointment</a>
    </div>
</div>
<div class="row-cols-auto">
    <div class="input-group">
        <input type="text" class="form-control" placeholder="Search by name" id="searchString"
            onkeypress="handleKeyPress(event)">
        <button type="button" class="btn btn-outline-primary" onclick="searchAppointment()">Search</button>
    </div>
</div>
<br />
<br />

@if (!Model.Appointments.Any())
{
    <div class="no-appointments">
        <img src="/images/sad-star.png" alt="No appointments" class="sad-face" />
        <p>No appointments available at the moment.</p>
    </div>
}
else
{
    <ol class="card-list">
        @foreach (var appointment in Model.Appointments)
        {
            <li class="appointment-item">
                <a class="nav-link" asp-controller="Appointment" asp-action="AppointmentInfo"
                    asp-route-appointmentId="@appointment?.Id">
                    <div class="appointment-details">
                        <p><strong>Patient:</strong> @(appointment?.Patient.FirstName ?? "UNKNOWN")
                            @(appointment?.Patient.LastName ?? "UNKNOWN")</p>
                        <p><strong>Doctor:</strong> @(appointment?.Doctor.FirstName ?? "UNKNOWN") @(appointment?.Doctor.LastName
                    ?? "UNKNOWN")</p>
                        <p><strong>Room:</strong> @(appointment?.Room.RoomNumber ?? "UNKNOWN")</p>
                        <p><strong>Date:</strong> @appointment?.Date.ToString("dd.MM.yyyy")</p>
                        <p><strong>Time:</strong> @appointment?.Time</p>
                        <p><strong>Reason:</strong> @(appointment?.Reason ?? "UNKNOWN")</p>
                    </div>
                </a>
                <br>
                <div class="appointment-actions">
                    <button class="update-btn btn-close-white" onclick="showUpdateForm('@appointment!.Id')">Update</button>
                    <button class="delete-btn btn-danger" onclick="deleteAppointment('@appointment!.Id')">Delete</button>
                </div>
            </li>
        }
    </ol>
}

<div id="updateForm" class="update-form" style="display:none;">
    <div class="card">
        <h3 class="card-header">Update Appointment</h3>
        <input type="hidden" id="appointmentId">
        <div class="card-body">
            <div class="mb-3">
                <label for="newDoctor">Doctor:</label>
                <select id="newDoctor" name="newDoctor" required>
                    <option value="">Select Doctor</option>
                    @foreach (Doctor doctor in Model.Doctors)
                    {
                        <option value="@doctor.Id">@doctor.FirstName @doctor.LastName</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="newPatient">Patient:</label>
                <select id="newPatient" name="newPatient" required>
                    <option value="">Select Patient</option>
                    @foreach (Patient patient in Model.Patients)
                    {
                        <option value="@patient.Id">@patient.FirstName @patient.LastName</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="newRoom">Room:</label>
                <select id="newRoom" name="newRoom" required>
                    <option value="">Select Room</option>
                    @foreach (Room room in Model.Rooms)
                    {
                        <option value="@room.Id">@room.RoomNumber</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="newDate">Date:</label>
                <input type="date" id="newDate">
            </div>
            <div class="mb-3">
                <label for="newTime">Time:</label>
                <input type="time" id="newTime">
            </div>
            <div class="mb-3">
                <label for="newReason">Reason:</label>
                <input type="text" id="newReason">
            </div>
            <br>
            <div class="mb-3">
                <button onclick="updateAppointment()">Save</button>
                <button onclick="hideUpdateForm()">Cancel</button>
            </div>
        </div>
    </div>

    @section Scripts {
        <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    }

    <script>
        function showUpdateForm(id) {
            fetchAppointmentAndUpdateForm(id);
        }

        function fetchAppointmentAndUpdateForm(id) {
            fetch(`/Appointment/Json/${id}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch appointment.');
                    }
                    return response.json();
                })
                .then(data => {
                    updateFormWithAppointmentData(data);
                })
                .catch(error => console.error('Error fetching appointment:', error));
        }

        function updateFormWithAppointmentData(data) {
            document.getElementById('appointmentId').value = data.id;
            document.getElementById('newPatient').value = data.patientId;
            document.getElementById('newDoctor').value = data.doctorId;
            document.getElementById('newRoom').value = data.roomId;
            document.getElementById('newDate').value = data.date.split('T')[0];
            document.getElementById('newTime').value = data.time;
            document.getElementById('newReason').value = data.reason;
            document.getElementById('updateForm').style.display = 'block';
        }

        function hideUpdateForm() {
            document.getElementById('updateForm').style.display = 'none';
        }

        function updateAppointment() {
            const appointmentId = document.getElementById('appointmentId').value;
            const patient = document.getElementById('newPatient').value;
            const doctor = document.getElementById('newDoctor').value;
            const room = document.getElementById('newRoom').value;
            const date = document.getElementById('newDate').value;
            const time = document.getElementById('newTime').value;
            const reason = document.getElementById('newReason').value;

            const updatedAppointment = {
                id: appointmentId,
                patientId: patient,
                doctorId: doctor,
                roomId: room,
                date: date,
                time: time,
                reason: reason
            };

            fetch(`/Appointment`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedAppointment)
            })
                .then(response => {
                    if (response.ok) {
                        alert('Appointment updated successfully!');
                        hideUpdateForm();
                        window.location.reload();
                    } else {
                        alert('Failed to update appointment.');
                    }
                })
                .catch(error => console.error('Error updating appointment:', error));
        }

        function deleteAppointment(id) {
            if (confirm('Are you sure you want to delete this appointment?')) {
                fetch(`/Appointment/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => {
                        if (response.ok) {
                            alert('Appointment deleted successfully!');
                            window.location.reload();
                        } else {
                            alert('Failed to delete appointment.');
                        }
                    });
            }
        }

        function searchAppointment() {
            appointmentItems.forEach(item => {
                const patientName = item.querySelector('.appointment-details p:first-child').textContent.trim().toLowerCase();
                const doctorName = item.querySelector('.appointment-details p:nth-child(2)').textContent.trim().toLowerCase();
                const roomNumber = item.querySelector('.appointment-details p:nth-child(3)').textContent.trim().toLowerCase();
                const reason = item.querySelector('.appointment-details p:nth-child(6)').textContent.trim().toLowerCase();

                const matchesSearch = patientName.includes(searchString) ||
                    doctorName.includes(searchString) ||
                    roomNumber.includes(searchString) ||
                    reason.includes(searchString);

                if (matchesSearch) {
                    item.style.display = '';
                } else {
                    item.style.display = 'none';
                }
            });
        }

        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                searchAppointment();
            }
        }
    </script>

    <style>
        h1 {
            color: #333;
        }

        .btn-modern {
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-modern:hover {
            background-color: #218838;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        input[type="text"],
        input[type="date"],
        input[type="time"],
        input[type="datetime-local"],
        select,
        textarea {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        button {
            background-color: #5cb85c;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #4cae4c;
        }

        .card-list {
            list-style-type: none;
            padding: 0;
        }

        .no-appointments {
            text-align: center;
            margin-top: 20px;
        }

        .no-appointments img.sad-face {
            width: 100px;
            height: 100px;
        }

        .no-appointments p {
            font-size: 18px;
            color: #888;
        }

        .appointment-item {
            background-color: #cfe2f3;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            padding: 20px;
            transition: transform 0.3s ease-in-out;
            position: relative;
        }

        .appointment-item:hover {
            transform: translateY(-5px);
        }

        .appointment-details p {
            margin: 0;
            font-size: 16px;
            line-height: 1.6;
            font-weight: 550;
            color: #333;
        }

        .appointment-details p strong {
            font-weight: bold;
            color: #666;
        }

        .appointment-actions {
            flex-shrink: 0;
        }

        .appointment-item hr {
            margin: 10px 0;
            border: none;
            border-top: 1px solid #e0e0e0;
        }

        .update-form {
            position: absolute;
            top: 40%;
            left: 50%;
            transform: translate(-40%, -50%);
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.418);
            display: none;
            z-index: 1000;
            width: 400px;
        }

        .update-form label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        .update-form input[type="text"],
        .update-form input[type="date"],
        .update-form input[type="time"],
        .update-form input[type="datetime-local"],
        .update-form select {
            width: calc(100% - 22px);
            padding: 8px;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-bottom: 10px;
        }

        .update-form button {
            background-color: #5cb85c;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 10px;
        }

        .update-form button:hover {
            background-color: #4cae4c;
        }
    </style>
