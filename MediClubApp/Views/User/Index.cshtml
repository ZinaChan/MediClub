@model IEnumerable<User>;
@{
    ViewData["Title"] = "User Page";
}

<h1> Users List</h1>
<hr />
<a asp-route="CreateUserPage"> <button class="btn-modern">Create new User</button> </a>
<br />
<br />

@if (!Model.Any())
{
    <div class="no-users">
        <img src="/images/sad-star.png" alt="No users" class="sad-face" />
        <p>No users available at the moment.</p>
    </div>
}
else
{
    <ol class="card-list">
        @foreach (var user in Model)
        {

            <li class="user-item">
                <a class="nav-link" asp-controller="User" asp-action="UserInfo" asp-route-userId="@user?.Id">
                    <div class="user-details">
                        <p><strong>AvatarUrl:</strong> @(user?.AvatarUrl ?? "UNKNOWN")</p>
                        <p><strong>FirstName:</strong> @(user?.FirstName ?? "UNKNOWN")</p>
                        <p><strong>LastName:</strong> @(user?.LastName ?? "UNKNOWN")</p>
                        <p><strong>Email:</strong> @user?.Email </p>
                    </div>
                </a>
                <br>
                <div class="user-actions">
                    <button class="update-btn btn-close-white" onclick="showUpdateForm('@user!.Id')">Update</button>
                    <button class="delete-btn btn-danger" onclick="deleteUser('@user!.Id')">Delete</button>
                </div>
            </li>
            <hr class="divider" />
        }
    </ol>
}

<div id="updateForm" class="update-form" style="display:none;">
    <h3>Update User</h3>
    <input type="hidden" id="userId">
    <div>
        <label for="newLogin">Login:</label>
        <input type="text" id="newLogin">
    </div>
    <div>
        <label for="newPassword">Password:</label>
        <input type="text" id="newPassword">
    </div>
    <div>
        <label for="newEmail">Email:</label>
        <input type="email" id="newEmail">
    </div>
    <div>
        <label for="newUsername">Username:</label>
        <input type="text" id="newUsername">
    </div>
    <div>
        <label for="newAvatarUrl">AvatarUrl:</label>
        <input type="text" id="newAvatarUrl">
    </div>
    <br />
    <div class="user-actions">
        <button onclick="updateUser()">Save</button>
        <button onclick="hideUpdateForm()">Cancel</button>
    </div>
</div>


<script>
    function showUpdateForm(id) {
        fetchUserAndUpdateForm(id);
    }

    function fetchUserAndUpdateForm(id) {
        fetch(`/User/Json/${id}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to fetch user.');
                }
                return response.json();
            })
            .then(data => {
                updateFormWithUserData(data);
            })
            .catch(error => console.error('Error fetching user:', error));

    }

    function updateFormWithUserData(data) {
        document.getElementById('userId').value = data.id;
        document.getElementById('newLogin').value = data.firstName;
        document.getElementById('newPassword').value = data.lastName;
        document.getElementById('newEmail').value = data.email;
        document.getElementById('newUsername').value = data.phoneNumber;
        document.getElementById('newAvatarUrl').value = data.address;
        document.getElementById('updateForm').style.display = 'block';
    }

    function hideUpdateForm() {
        document.getElementById('updateForm').style.display = 'none';
    }

    function updateUser() {
        const userId = document.getElementById('userId').value;
        const login = document.getElementById('newLogin').value;
        const password = document.getElementById('newPassword').value;
        const email = document.getElementById('newEmail').value;
        const username = document.getElementById('newUsername').value;
        const avatarUrl = document.getElementById('newAvatarUrl').value;

        const updatedUser = {
            id: userId,
            login: login,
            password: password,
            email: email,
            username: username,
            avatarUrl: avatarUrl
        };

        fetch(`/User`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(updatedUser)
        })
            .then(response => {
                if (response.ok) {
                    alert('User updated successfully!');
                    hideUpdateForm();
                    window.location.reload();

                } else {
                    alert('Failed to update user.');
                }
            })
            .catch(error => console.error('Error updating user:', error));
    }

    function deleteUser(id) {
        if (confirm('Are you sure you want to delete this user?')) {
            fetch(`/User/${id}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        alert('User deleted successfully!');
                        window.location.reload();
                    } else {
                        alert('Failed to delete user.');
                    }
                });
        }
    }
</script>

<style>
    h1 {
        color: #333;
    }

    .btn-modern {
        padding: 10px 20px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-modern:hover {
        background-color: #218838;
    }

    label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    input[type="text"],
    input[type="date"],
    input[type="email"],
    select,
    textarea {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    button {
        background-color: #5cb85c;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 4px;
        cursor: pointer;
    }

    button:hover {
        background-color: #4cae4c;
    }

    .card-list {
        list-style-type: none;
        padding: 0;
    }

    .no-users {
        text-align: center;
        margin-top: 20px;
    }

    .no-users img.sad-face {
        width: 100px;
        height: 100px;
    }

    .no-users p {
        font-size: 18px;
        color: #888;
    }

    .user-item {
        background-color: #cfe2f3;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        padding: 20px;
        transition: transform 0.3s ease-in-out;
        position: relative;
    }

    .user-item:hover {
        transform: translateY(-5px);
    }

    .user-details p {
        margin: 0;
        font-size: 16px;
        line-height: 1.6;
        font-weight: 550;
        color: #333;
    }

    .user-details p strong {
        font-weight: bold;
        color: #666;
    }

    .user-actions {
        flex-shrink: 0;
    }

    .user-item hr {
        margin: 10px 0;
        border: none;
        border-top: 1px solid #e0e0e0;
    }

    .update-form {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-40%, -50%);
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.418);
        display: none;
        z-index: 1000;
        width: 400px;
    }

    .update-form label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    .update-form input[type="text"],
    .update-form input[type="date"],
    .update-form input[type="email"],
    .update-form select {
        width: calc(100% - 22px);
        padding: 8px;
        box-sizing: border-box;
        border: 1px solid #ccc;
        border-radius: 4px;
        margin-bottom: 10px;
    }

    .update-form button {
        background-color: #5cb85c;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 4px;
        cursor: pointer;
        margin-right: 10px;
    }

    .update-form button:hover {
        background-color: #4cae4c;
    }
</style>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}