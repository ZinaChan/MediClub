@model User
@{
    Layout = "~/Views/Shared/_LayoutAuth.cshtml";
    ViewData["Title"] = "User Info Page";
    var defaultAvatarUrl = GetDefaultAvatarUrl(Model.Gender);
}

@functions
{
    public string GetDefaultAvatarUrl(string gender)
    {
        if (gender == nameof(Gender.Male))
        {
            return "images/anonymous-man.png";
        }
        else if (gender == nameof(Gender.Female))
        {
            return "images/anonymous-woman.png";
        }
        else
        {
            return "images/anonymous.png";
        }
    }
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-4">
            <div class="avatar-container text-center">
                <img id="avatarPreview" src="/@(Model.AvatarUrl ?? defaultAvatarUrl)"
                    class="img-fluid rounded-circle avatar-image" alt="User Avatar">
                <label for="avatarInput" class="change-avatar-label">
                    <i class="fas fa-camera"></i> Change Avatar
                </label>
                <input type="file" id="avatarInput" name="avatarInput" accept="image/*" style="display: none;">
            </div>
        </div>
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@Model.FirstName @Model.LastName</h5>
                    <p class="card-text">
                        <strong>Email:</strong> @Model.Email
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
    $('#avatarInput').change(function () {
        var file = this.files[0];
        var formData = new FormData();
        formData.append('avatarFile', file);

        $.ajax({
            url: '@Url.Action("ChangeAvatar", "User", new { id = Model.Id })',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (data) {
                var updatedUrl = '@Url.Content("~/")' + data.avatarUrl + '?timestamp=' + new Date().getTime();
                $('#avatarPreview').attr('src', updatedUrl);
                localStorage.clear();
                alert('Avatar updated successfully!');
            },
            error: function () {
                alert('Error updating avatar.');
            }
        });
    });
    function clearAvatarCache(url) {
        if ('caches' in window) {
            caches.open('avatar-cache').then(function (cache) {
                cache.delete(url).then(function (response) {
                    console.log('Cache entry deleted:', response);
                });
            });
        }
    }

    clearAvatarCache('@Url.Content("~/")' + data.avatarUrl);
</script>


}

<style>
    .card-title {
        margin-bottom: 0.5rem;
        color: #343a40;
    }

    .card-text {
        color: #6c757d;
    }

    .avatar-container {
        position: relative;
        cursor: pointer;
    }

    .avatar-container .avatar-image {
        transition: transform 0.2s;
    }

    .avatar-container:hover .avatar-image {
        transform: scale(1.1);
    }

    .change-avatar-label {
        position: absolute;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        background-color: rgba(0, 0, 0, 0.7);
        color: white;
        padding: 8px 16px;
        border-radius: 20px;
        cursor: pointer;
        display: none;
    }

    .avatar-container:hover .change-avatar-label {
        display: block;
    }

    .avatar-container {
        position: relative;
        width: 300px;
        height: 300px;
        margin: 0 auto;
    }

    .avatar-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .change-avatar-label {
        position: absolute;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
        cursor: pointer;
    }
</style>
